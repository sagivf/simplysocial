& {
  @import (multiple, reference) "../colors";
  @import (multiple, reference) "../sizes";
  @import (multiple, reference) "../../../node_modules/lesshat/build/lesshat-prefixed";

  .icon-cancel-circle {
    position: absolute;
    right: -20px;
    top: -20px;
    font-size: 1.5em;
  }

  .ins-modal {
    display: block;
    position: fixed;
    height: 240px;
    top: 50%;
    margin-top: -200px;
    left: 30%;
    right: 30%;
    border-radius: 3px;
    background: @grey-light;
    padding: 10px 25px;

    .ins-actions {
      position: relative;
      height: 40px;

      .ins-left-position {
        position: absolute;
        left: 0;
        bottom: 0;
      }

      button {
        position: absolute;
        right: 0;
        bottom: 0;
        display: inline-block;
        margin-bottom: 0;
        font-weight: 400;;
        vertical-align: middle;
        cursor: pointer;
        background-image: none;
        float: right;
      }

      a {
        font-size: 1.2em;
        color: @grey-dark;
        margin-right: 10px;
        display: inline-block;
        i {
          margin-right: 5px;
        }
      }
    }

    h2 {
      color: @main;
      font-size: 1.5em;
      margin-bottom: 5px;
    }

    textarea {
      border: 0;
      padding: 10px;
      font-size: 2em;
      width: 100%;
      height: 110px;
      margin: 0;
      resize: none;
    }

    &.ng-hide-add         { animation:0.2s lightSpeedOut ease; }
    &.ng-hide-remove      { animation:0.5s flipInX ease; }

  }

  .ins-overlay {
    .lh-filter(blur());
    background-color: #000;
    opacity: 0.8;
    display: block;
    position: fixed;
    height: 100%;
    top: 0;
    bottom: 0;
    width: 101vw;
  }


  @media only screen and (max-width: @mobile-width) {
    .ins-modal {
      left: 40px;
      right: 40px;
    }
  }


  @keyframes flipInX {
    0% {
      transform: perspective(400px) rotate3d(1, 0, 0, 90deg);
      .lh-transition-timing-function(ease-in);
      .lh-opacity(0);
    }

    40% {
      .lh-transform(perspective(400px) rotate3d(1, 0, 0, -20deg));
      .lh-transition-timing-function(ease-in);
    }

    60% {
      .lh-transform(perspective(400px) rotate3d(1, 0, 0, 10deg));
      .lh-opacity(1);
    }

    80% {
      .lh-transform(perspective(400px) rotate3d(1, 0, 0, -5deg));
    }

    100% {
      .lh-transform(perspective(400px));
    }
  }


  @keyframes lightSpeedOut {
    0% {
      .lh-opacity(1);
    }

    100% {
      .lh-transform(translate3d(0, -100%, 0));
      .lh-opacity(0);
    }
  }
}
